{
    "swagger": "2.0",
    "info": {
        "title": "Docker Remote API",
        "description": "The API for each docker installation.",
        "termsOfService": "http://example.com/tos/",
        "version": "v1.19"
    },
    "host": "unix:///var/run/docker.sock",
    "basePath": "/",
    "schemes": [
        "unix",
        "http",
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "version": {
            "type": "object",
            "properties": {
                "Version": {
                    "type": "string"
                },
                "Os": {
                    "type": "string"
                },
                "KernelVersion": {
                    "type": "string"
                },
                "GoVersion": {
                    "type": "string"
                },
                "GitCommit": {
                    "type": "string"
                },
                "Arch": {
                    "type": "string"
                },
                "ApiVersion": {
                    "type": "string"
                }
            }
        },
        "port": {
            "type": "object",
            "properties": {
                "PrivatePort": {
                    "type": "integer"
                },
                "PublicPort": {
                    "type": "integer"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "mount": {
            "type": "object",
            "properties": {
                "Source": {
                    "type": "string"
                },
                "Destination": {
                    "type": "string"
                },
                "Mode": {
                    "type": "string"
                },
                "RW": {
                    "type": "boolean"
                }
            }
        },
        "LogConfig": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string"
                },
                "Config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Ulimit": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Soft": {
                    "type": "integer"
                },
                "Hard": {
                    "type": "integer"
                }
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "PathOnHost": {
                    "type": "string"
                },
                "PathInContainer": {
                    "type": "string"
                },
                "CgroupPermissions": {
                    "type": "string"
                }
            }
        },
        "RestartPolicy": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string",
                    "enum": ["always", "on-failure"]
                },
                "MaximumRetryCount": {
                    "type": "integer"
                }
            },
            "default": {}
        },
        "PortBinding": {
            "type": "object",
            "properties": {
                "HostPort": {
                    "type": "string"
                }
            }
        },
        "HostConfig": {
            "type": "object",
            "properties": {
                "Binds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Links": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LxcConf": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "Memory": {
                    "type": "integer",
                    "default": 0
                },
                "MemorySwap": {
                    "type": "integer",
                    "default": 0
                },
                "CpuShares": {
                    "type": "integer"
                },
                "CpuPeriod": {
                    "type": "integer"
                },
                "CpusetCpus": {
                    "type": "number"
                },
                "CpusetMems": {
                    "type": "number"
                },
                "BlkioWeight": {
                    "type": "integer"
                },
                "MemorySwappiness": {
                    "type": "integer"
                },
                "OomKillDisable": {
                    "type": "boolean"
                },
                "PortBindings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/PortBinding"
                    }
                },
                "PublishAllPorts": {
                    "type": "boolean"
                },
                "Privileged": {
                    "type": "boolean"
                },
                "ReadonlyRootfs": {
                    "type": "boolean"
                },
                "Dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DnsSearch": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ExtraHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "VolumesFrom": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CapAdd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CapDrop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "RestartPolicy": {
                    "$ref": "#/definitions/RestartPolicy"
                },
                "NetworkMode": {
                    "type": "string"
                },
                "Devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Device"
                    }
                },
                "Ulimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ulimit"
                    }
                },
                "SecurityOpt": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "LogConfig": {
                    "$ref": "#/definitions/LogConfig"
                },
                "CgroupParent": {
                    "type": "string"
                }
            }
        },
        "ContainerConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Image": {
                    "type": "string"
                },
                "Command": {
                    "type": "string"
                },
                "Created": {
                    "type": "integer"
                },
                "Status": {
                    "type": "string"
                },
                "Ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/port"
                    }
                },
                "Labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "SizeRw": {
                    "type": "integer"
                },
                "SizeRootFs": {
                    "type": "integer"
                },
                "Hostname": {
                    "type": "integer"
                },
                "Domainname": {
                    "type": "integer"
                },
                "User": {
                    "type": "integer"
                },
                "AttachStdin": {
                    "type": "boolean",
                    "default": false
                },
                "AttachStdout": {
                    "type": "boolean",
                    "default": true
                },
                "AttachStderr": {
                    "type": "boolean",
                    "default": true
                },
                "Tty": {
                    "type": "boolean",
                    "default": false
                },
                "OpenStdin": {
                    "type": "boolean",
                    "default": false
                },
                "StdinOnce": {
                    "type": "boolean",
                    "default": false
                },
                "Env": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Cmd": {
                    "type": ["array", "string"],
                    "items": {
                        "type": "string"
                    }
                },
                "Entrypoint": {
                    "type": ["array", "string"],
                    "items": {
                        "type": "string"
                    }
                },
                "Mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mount"
                    }
                },
                "WorkingDir": {
                    "type": "string"
                },
                "NetworkDisabled": {
                    "type": "boolean"
                },
                "MacAddress": {
                    "type": "string"
                },
                "ExposedPorts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "enum": [
                            {}
                        ],
                        "default": {}
                    }
                },
                "HostConfig": {
                    "$ref": "#/definitions/HostConfig"
                }
            }
        },
        "NetworkConfig": {
            "type": "object",
            "properties": {
                "Bridge": {
                    "type": "string"
                },
                "Gateway": {
                    "type": "string"
                },
                "IPAddress": {
                    "type": "string"
                },
                "IPPrefixLen": {
                    "type": "integer"
                },
                "MacAddress": {
                    "type": "string"
                },
                "PortMapping": {
                    "type": "string"
                },
                "Ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/port"
                    }
                }
            }
        },
        "ContainerState": {
            "type": "object",
            "properties": {
                "Error": {
                    "type": "string"
                },
                "ExitCode": {
                    "type": "integer"
                },
                "FinishedAt": {
                    "type": "string"
                },
                "OOMKilled": {
                    "type": "boolean"
                },
                "Paused": {
                    "type": "boolean"
                },
                "Pid": {
                    "type": "integer"
                },
                "Restarting": {
                    "type": "boolean"
                },
                "Running": {
                    "type": "boolean"
                },
                "StartedAt": {
                    "type": "string"
                }
            }
        },
        "Container": {
            "type": "object",
            "properties": {
                "AppArmorProfile": {
                    "type": "string"
                },
                "Args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Config": {
                    "$ref": "#/definitions/ContainerConfig"
                },
                "Created": {
                    "type": "string"
                },
                "Driver": {
                    "type": "string"
                },
                "ExecDriver": {
                    "type": "string"
                },
                "ExecIDs": {
                    "type": "string"
                },
                "HostConfig": {
                    "$ref": "#/definitions/HostConfig"
                },
                "HostnamePath": {
                    "type": "string"
                },
                "HostsPath": {
                    "type": "string"
                },
                "LogPath": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Image": {
                    "type": "string"
                },
                "MountLabel": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NetworkSettings": {
                    "$ref": "#/definitions/NetworkConfig"
                },
                "Path": {
                    "type": "string"
                },
                "ProcessLabel": {
                    "type": "string"
                },
                "ResolvConfPath": {
                    "type": "string"
                },
                "RestartCount": {
                    "type": "integer"
                },
                "State": {
                    "$ref": "#/definitions/ContainerState"
                },
                "Mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/mount"
                    }
                }
            }
        },
        "ContainerTop": {
            "type": "object",
            "properties": {
                "Titles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Processes": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/containers/json": {
            "get": {
                "summary": "List containers",
                "description": "List containers",
                "operationId": "getContainers",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "Show all containers. Only running containers are shown by default (i.e., this defaults to false)",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Show <limit> last created containers, include non-running ones.",
                        "type": "integer"
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "Show only containers created since Id, include non-running ones.",
                        "type": "string"
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Show only containers created before Id, include non-running ones.",
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "1/True/true or 0/False/false, Show the containers sizes.",
                        "type": "boolean"
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "A JSON encoded value of the filters (a map[string][]string) to process on the containers list",
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "no error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContainerConfig"
                            }
                        }
                    },
                    "400": {
                        "description": "bad parameter"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "tags": [
                    "Container"
                ]
            }
        },
        "/containers/create": {
            "post": {
                "summary": "Create a container",
                "description": "Create a container",
                "operationId": "createContainer",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Assign the specified name to the container. Must match /?[a-zA-Z0-9_-]+.",
                        "type": "string",
                        "pattern": "/?[a-zA-Z0-9_-]+"
                    },
                    {
                        "name": "container",
                        "in": "body",
                        "description": "Container to create",
                        "schema": {
                            "$ref": "#/definitions/ContainerConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "no error"
                    },
                    "404": {
                        "description": "no such container"
                    },
                    "406": {
                        "description": "impossible to attach"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "tags": [
                    "Container"
                ]
            }
        },
        "/containers/{id}/json": {
            "get": {
                "summary": "Inspect a container",
                "description": "Return low-level information on the container id",
                "operationId": "getContainer",
                "responses": {
                    "200": {
                        "description": "no error",
                        "schema": {
                            "$ref": "#/definitions/Container"
                        }
                    },
                    "404": {
                        "description": "no such container"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The container id or name",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Container"
                ]
            }
        },
        "/containers/{id}/top": {
            "get": {
                "summary": "List processes running inside a container",
                "description": "List processes running inside the container id",
                "operationId": "getContainerTop",
                "responses": {
                    "200": {
                        "description": "no error",
                        "schema": {
                            "$ref": "#/definitions/ContainerTop"
                        }
                    },
                    "404": {
                        "description": "no such container"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The container id or name",
                        "type": "string"
                    },
                    {
                        "name": "ps_args",
                        "in": "query",
                        "description": "ps arguments to use (e.g., aux)",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Container"
                ]
            }
        },
        "/containers/{id}/logs": {
            "get": {
                "summary": "Get container logs",
                "description": "Get stdout and stderr logs from the container id. Note: This endpoint works only for containers with json-file logging driver.",
                "operationId": "getContainerLogs",
                "responses": {
                    "101": {
                        "description": "no error, hints proxy about hijacking",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "200": {
                        "description": "no error, no upgrade header found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "no such container"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The container id or name",
                        "type": "string"
                    },
                    {
                        "name": "follow",
                        "in": "query",
                        "description": "1/True/true or 0/False/false, return stream. Default false.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "stdout",
                        "in": "query",
                        "description": "1/True/true or 0/False/false, show stdout log. Default false.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "stderr",
                        "in": "query",
                        "description": "1/True/true or 0/False/false, show stderr log. Default false.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "UNIX timestamp (integer) to filter logs. Specifying a timestamp will only output log-entries since that timestamp. Default: 0 (unfiltered)",
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "timestamps",
                        "in": "query",
                        "description": "1/True/true or 0/False/false, print timestamps for every log line. ",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "tail",
                        "in": "query",
                        "description": "Output specified number of lines at the end of logs: all or <number>. Default all.",
                        "type": "string"
                    }
                ],
                "tags": [
                    "Container"
                ]
            }
        },
        "/version": {
            "get": {
                "summary": "Show the docker version information",
                "description": "Show the docker version information",
                "operationId": "getVersion",
                "responses": {
                    "200": {
                        "description": "no error",
                        "schema": {
                            "$ref": "#/definitions/version"
                        }
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "tags": [
                    "Misc"
                ]
            }
        },
        "/build": {
            "post": {
                "summary": "Build an image from Dockerfile via stdin",
                "description": "Build an image from Dockerfile via stdin",
                "operationId": "build",
                "parameters": [
                    {
                        "name": "inputStream",
                        "in": "body",
                        "description": "The input stream must be a tar archive compressed with one of the following algorithms: identity (no compression), gzip, bzip2, xz.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dockerfile",
                        "in": "query",
                        "description": "Path within the build context to the Dockerfile. This is ignored if remote is specified and points to an individual filename.",
                        "type": "string"
                    },
                    {
                        "name": "t",
                        "in": "query",
                        "description": "A repository name (and optionally a tag) to apply to the resulting image in case of success.",
                        "type": "string"
                    },
                    {
                        "name": "remote",
                        "in": "query",
                        "description": "A Git repository URI or HTTP/HTTPS URI build source. If the URI specifies a filename, the file’s contents are placed into a file called Dockerfile.",
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Suppress verbose build output.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "nocache",
                        "in": "query",
                        "description": "Do not use the cache when building the image.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "pull",
                        "in": "query",
                        "description": "Attempt to pull the image even if an older image exists locally",
                        "type": "string"
                    },
                    {
                        "name": "rm",
                        "in": "query",
                        "description": "Remove intermediate containers after a successful build (default behavior).",
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "forcerm",
                        "in": "query",
                        "description": "always remove intermediate containers (includes rm)Request Headers:",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "Content-type",
                        "in": "header",
                        "description": " Set to 'application/tar'.",
                        "type": "string",
                        "enum": ["application/tar"],
                        "default": "application/tar"
                    },
                    {
                        "name": "X-Registry-Config",
                        "in": "header",
                        "description": "base64-encoded ConfigFile object",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "no error"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "tags": [
                    "Image"
                ]
            }
        }
    }
}
