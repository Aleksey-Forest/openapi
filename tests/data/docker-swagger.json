
{
    "swagger": "2.0",
    "info": {
        "title": "Docker Remote API",
        "description": "The API for each docker installation.",
        "termsOfService": "http://example.com/tos/",
        "version": "v1.16"
    },
    "host": "api.example.com",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/auth": {
            "post": {
                "summary": "Check auth configuration",
                "description": "Check auth configuration",
                "operationId": "checkAuthentication",
                "parameters": [{
                    "name": "Authentication",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "username": { "type": "string" },
                            "password": { "type": "string" },
                            "email": { "type": "string" },
                            "serveraddress": { "type": "string" }
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "no error"
                    },
                    "204": {
                        "description": "no error"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "tags": [
                    ""
                ]
            }
        },
        "/build": {
            "post": {
                "summary": "Build an image from Dockerfile via stdin",
                "description": "Build an image from Dockerfile via stdin",
                "operationId": "build",
                "parameters": [
                    {
                        "name": "t",
                        "in": "query",
                        "description": "repository name (and optionally a tag) to be applied to        the resulting image in case of success",
                        "type": "string"
                    },
                    {
                        "name": "forcerm",
                        "in": "query",
                        "description": "always remove intermediate containers (includes rm)Request Headers:",
                        "type": "string"
                    },
                    {
                        "name": "nocache",
                        "in": "query",
                        "description": "do not use the cache when building the image",
                        "type": "string"
                    },
                    {
                        "name": "pull",
                        "in": "query",
                        "description": "attempt to pull the image even if an older image exists locally",
                        "type": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "suppress verbose build output",
                        "type": "string"
                    },
                    {
                        "name": "rm",
                        "in": "query",
                        "description": "remove intermediate containers after a successful build (default behavior)",
                        "type": "string"
                    },
                    {
                        "name": "Content-type",
                        "in": "header",
                        "description": "should be set to application/tar.",
                        "type": "string",
                        "enum": ["application/tar"],
                        "default": "application/tar"
                    },
                    {
                        "name": "X-Registry-Config",
                        "in": "header",
                        "description": "base64-encoded ConfigFile object",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "no error"
                    },
                    "204": {
                        "description": "no error"
                    },
                    "500": {
                        "description": "server error"
                    }
                },
                "tags": [
                    ""
                ]
            }
        }
    },
    "definitions": {
    }
}
